RDS

RDSはファイルシステムへのアクセスがサポートされていないため、ファイルシステムへのアクセスに基づく設定や自社管理を実現するためにはEC2インスタンスにデータベースをインストールしてデータベースサーバーをカスタムで構築する必要がある


【RDSの読み取りパフォーマンスを向上】
・Amazon RDSリードレプリカを追加して、読取処理を分散する。
・Elasticacheによるキャッシュレイヤーを追加して、アクセスが集中する一部クエリをキャッシュ処理することで高速処理を実現して、RDSへの負荷を減少させる。
・ストレージタイプをIOPSの大きなサイズに変更することで、RDS本体のI/Oパフォーマンスを向上させる。


・RDSはファイルシステムへのアクセスがサポートされていないため、ファイルシステムへのアクセスに基づく設定や自社管理を実現するためにはEC2インスタンスにデータベースをインストールしてデータベースサーバーをカスタムで構築する必要がある。

RDS プロキシ
アプリケーションとRDSデータベースの間の仲介役として機能します。RDS プロキシは必要となるデータベースへのコネクションプールを確立および管理し、アプリケーションからのデータベース接続を少なく抑える機能です。

Lambda関数はRDSエンドポイントではなくRDSプロキシを利用して接続することが求められます。
RDSプロキシはLambda関数の同時実行によって作成された大量の同時接続をスケーリングするために必要なコネクションをプーリングします。
これにより、Lambdaアプリケーションは、Lambda関数呼び出しごとに新しいコネクションを作成するのではなく、既存のコネクションを再利用できます。   
※RDSプロキシを利用せず、エンドポイントを利用するとLambda関数によってコネクションが多数発生して処理が上手くいかなくなってしまいます。

2019年6月より、
※RDSのストレージに対するAuto Scalingが利用可能となりました。
これにより、増加するデータベースのワークロードに応じてストレージ容量がダウンタイムなしで自動的にスケールされます。しかしながら、これはストレージ容量のスケーリングです。 

シャーディング
データベース内の複数のテーブルにデータを分割するための一般的な概念です。リクエスト増加などで単一のマスターDBの運用で限界がある場合に、 一定のルールに従いデータを複数のDBに振り分けることでアクセスを分散させることができます。 

レプリケーションラグ
リードレプリカは非同期的にレプリケートされる個別のデータベースインスタンスであるため、 レプリケーションデータが遅れることが多く、最新のトランザクションのいくつかが表示できない可能性があります。これによって、データ変更直後には古いデータが参照されてしまう可能性があります。

拡張モニタリングを有効化
RDSのDBインスタンス上のさまざまなプロセスまたはスレッドがCPUをどのように使用しているかを常時モニタリングするためには、RDSの拡張モニタリングを有効化することが必要です。これにより、DBインスタンスのOSのリアルタイムメトリックスが確認できるようになります。 RDSコンソールを使用してDBインスタンスのメトリクスを表示でき、CloudWatch Logsからの拡張モニタリングを利用することができます。 デフォルトでは、拡張モニタリングメトリクスは30日間CloudWatch Logsに保存されます。

※フェイルオーバーすると、Amazon RDSはDBインスタンスのCNAMEレコードをスタンバイから切り替えて、新しいプライマリに昇格します。

自動バックアップデフォルトは7日間
最大35日間
手動だと３５日超えても可能。

MySQLにおいて、推奨されるストレージエンジンはInnoDBです。
ストレージエンジン
さまざまなテーブル型に対する SQL 操作を処理する MySQL コンポーネントです。

IAM DB