S3

S3イベント
バケット内イベントの発生をトリガーにして、SNS/SQS/Lambdaに通知設定が可能。

・Amazon S3に静的ウェブサイトをホスティングできます。この静的ウェブサイトのルーティングをスケーリングする方法としてRoute53と連携させることが必要です。Route53を利用してエイリアスレコードを作成してドメインのホストゾーンに追加し、pintor.com と www.pintor.com を対応する S3 バケットにマッピングします。エイリアスレコードでは、IP アドレスを使用する代わりに、Amazon S3 ウェブサイトエンドポイントを使用します。Amazon Route 53 によって、エイリアスレコードと、Amazon S3 バケットが存在する IP アドレスとのマッピングが維持されます。

Amazon S3 アクセスポイント
S3 の共有データセットへの大規模なデータアクセスの管理を簡素化する機能です。アクセスポイントは、バケットにアタッチされた名前付きのネットワークエンドポイントで、S3 オブジェクトのオペレーション (GetObject や PutObject など) を実行するために使用できます。各アクセスポイントは基になるバケットにアタッチされたバケットポリシーと連動して機能するカスタマイズされたアクセスポイントポリシーを適用してアクセスを制御することが可能です

・S3 の共有データセットへの大規模なデータアクセスの管理を簡素化したり、複数のポリシーに基づく制御をする際は S3 アクセスポイントを利用することが求められます。

Amazon S3 Transfer Acceleration
 を使用すると、クライアントと S3 バケットの間で長距離にわたるファイル転送を高速、簡単、安全に行えるようになります。

・S3にCloudFrontによるコンテンツ配信を構成して、AWS WAF を利用してReferer制限を実装することができます。AWS WAF は、CloudFront に転送される HTTP および HTTPS リクエストをモニタリングして、コンテンツへのアクセスを制御可能にするウェブアプリケーションファイアウォールです。AWS WAFのReferer制限によって直接にURLリンクを参照することを制限することができます。

オリジンアクセスアイデンティティ(OAI)
S3バケットをオリジンに指定した場合、OAIを利用してオリジンへの直接的なアクセスを拒否し、CloudFrontを経由したアクセスのみ許可するように制限することが可能です。そうすることでプライベート性の高いコンテンツを安全に配信できます。

・Secure File Transfer Protocol (SFTP) を使用して Amazon S3 との間でファイルを直接転送することができます。

CORS
アプリケーション上で複数ドメインからのコンテンツアクセスをS3バケットに許可する際に利用する仕組み

ライフサイクル管理
「NonCurrentVersion」有効期限ポリシーと「ExpiredObjectDeleteMarker」ポリシーを有効にして、以前のバージョンのオブジェクトを期限切れにすることです。そして、バケット内に関連するデータオブジェクトが存在しないマーカーを削除します。
※MFA Deleteが有効だと設定が不可

s3:Get*とs3:List*という参照処理が許可されているという設定。AmazonS3ReadOnlyAccessの設定。

バケットポリシー
バケットのみに設定されるアクセス制御ですが、
ACL
バケットとオブジェクトの両方に設定することができます。
ACLではバケット単位のACLの設定に関係なくオブジェクト単位のACLが優先されるように設定されます。つまり、バケットACLでパブリックアクセスを許可しない設定することに加えて、オブジェクトについてもACLでパブリックアクセスを許可していないことが必要となります。

このようにACLの設定は非常に面倒であったため、追加されたのが S3のパブリックアクセス設定機能です。 
S3 の パブリックアクセス設定機能
バケットレベルまたはアカウントレベルで、すべてのオブジェクトへのパブリックアクセスをブロックできます。この機能でブロックを有効化することでS3バケット全体に対してパブリックアクセスを拒否することができます。

・デフォルトでは、すべての Amazon S3 リソースはプライベートであるため、リソースを作成した AWS アカウントだけがアクセスできます。
これらのオブジェクトへのWEBアクセスを許可するには、s3:GetObject アクセス許可を条件付きで付与するバケットポリシーを追加する方法があります。条件としては、aws:Referer キーを使用して、GET リクエストが特定のウェブページから発生する必要があることを指定します。

静的ホスティングではHTTPSの利用ができないため、セキュリティが高いウェブサイト作成には向いていません。
※ただし、CloudFrontとS3を連携させれば、HTTPSを利用することも可能です。

プレフィックス
を利用して日付ベースでアップロードを分散することで少なくとも 3,500 リクエスト/秒、データの取得で 5,500 リクエスト /秒をサポートできるようにパフォーマンスを自動的に向上させることができます。以前はS3がこの性能を発揮するために、ハッシュを利用したランダムな プレフィックスによるパフォーマンス向上が必要不可欠でしたが、S3の既存のプレフィックスを用いて、リクエストレートをサポートできるようになりました。

バケット内のプレフィックスの数に制限はありません。

S3にCloudFrontによるコンテンツ配信を構成して、AWS WAF を利用してReferer制限を実装することができます。AWS WAF は、CloudFront に転送される HTTP および HTTPS リクエストをモニタリングして、コンテンツへのアクセスを制御可能にするウェブアプリケーションファイアウォールです。AWS WAFのReferer制限によって直接にURLリンクを参照することを制限することができます。AWS WAF はウェブアプリケーションのファイアウォールであり、CloudFront に転送される HTTP および HTTPS リクエストのモニタリングや、コンテンツへのアクセスのコントロールを可能にします。指定された条件 (クエリ文字列の値や、リクエストの送信元 IP アドレスなど) に基づき、CloudFront はリクエストされたコンテンツまたは HTTP ステータスコード 403 (Forbidden) でリクエストに対応します。

署名付きCookieや署名付きURLはアクセス範囲を制限をすることができますが、特定のユーザーによってリンク自体を利用することは可能です。
※リンクの禁止ではない

バージョニングを有効にした場合、ライフサイクルを管理を設定しないとエラーが起きる。（503エラー）


クロスリージョンレプリケーション
バケットに対するオブジェクト作成・更新・削除などのデータ処理のイベントをトリガーとしてレプリケーションが実行されます。
クロスリージョンレプリケーション は、異なる AWS リージョンにある２つのバケット間でオブジェクトを自動的に非同期にコピーする機能です。クロスリージョンレプリケーションは同じ AWS アカウントが所有するバケットにも、異なるアカウントが所有するバケットにも設定できます。
※バージョニング機能を有効にする。
AWS CLIのコマンド操作によって手動で実行することが可能です。マネジメントコンソール上ではオブジェクトを登録すれば自動でレプリケーションされる

S3 Access Analyzer
AWS アカウントの外部からアクセスできるリソースを特定する総合的な解析結果を生成します。S3バケットに対する外部アカウントからのアクセス情報を分析して、不正なアカウントアクセスがないかを確認することができます。

ストレージクラス分析
により、ストレージアクセスパターンを分析し、適切なデータを適切なストレージクラスに移行すべきタイミングを判断できます。ストレージクラス分析がフィルタリングされたデータセットのアクセスパターンを一定期間監視することで、ライフサイクルポリシーを設定することができます。

・S3 バケットに対して暗号化キーによるサーバーサイド暗号化を有効化すると、各アクセスログファイルはS3 バケットに保存される前に自動的に暗号化され、アクセス時に復号されます。したがって、ログも自動で暗号化されるため、S3バケットの暗号化と別に設定する必要はありません。

SSE-S3
Amazon S3 で管理された暗号化キーにより実施されるサーバーサイド暗号化です。
暗号化と復号化をS3が自動で実施してくれる
AES-256暗号化

Client Side Encryption（CSE）
S3に送信する前に暗号化
ユーザーが独自の暗号化キーを利用して暗号化したオブジェクトをS3に保存して、暗号化キーの生成・監理はクライアントで実行する形式です。

SSE-C
ユーザが管理する鍵により暗号化を実施できます。

オブジェクトロック
Write Once Read Many (WORM) モデルを使用してオブジェクトを保存できます。オブジェクトロックにより、オブジェクトが削除または上書きされることを、一定期間または無期限に防止できます。S3 オブジェクトロックを使用して、WORM ストレージを必要とする規制要件を満たしたり、オブジェクトの変更や削除に対する保護レイヤーを追加したりできます。

S3バケットの静的WEBホスティング（403エラーについて）

S3バケットの静的WEBホスティングにおいて、HTMLオブジェクトにアクセスする際に、オブジェクトの読み取りアクセス許可が付与されていない場合は、ウェブサイトエンドポイントから HTTP レスポンスコード 403 (Access Denied) が返されます。
静的WEBホスティングを利用するためには、S3静的ウェブホスティング機能を有効化します。次にIndex.htmlを設定することでWEBサイトの設定が完了します。しかしながら、加えてインターネットからのアクセスが許可されるアクセス管理設定が必要となります。したがって、パブリックアクセスブロックの無効化することと、バケットポリシーの設定により、インターネットからのバケットへのs3:GetObject を設定する必要があります。

オブジェクトロック
Write Once Read Many (WORM) モデルを使用してオブジェクトを保存できます。オブジェクトロックにより、オブジェクトが削除または上書きされることを、一定期間または無期限に防止できます。S3 オブジェクトロックを使用して、WORM ストレージを必要とする規制要件を満たしたり、オブジェクトの変更や削除に対する保護レイヤーを追加したりできます。

S3バケットの静的WEBホスティング（403エラーについて）

S3バケットの静的WEBホスティングにおいて、HTMLオブジェクトにアクセスする際に、オブジェクトの読み取りアクセス許可が付与されていない場合は、ウェブサイトエンドポイントから HTTP レスポンスコード 403 (Access Denied) が返されます。
静的WEBホスティングを利用するためには、S3静的ウェブホスティング機能を有効化します。次にIndex.htmlを設定することでWEBサイトの設定が完了します。しかしながら、加えてインターネットからのアクセスが許可されるアクセス管理設定が必要となります。したがって、パブリックアクセスブロックの無効化することと、バケットポリシーの設定により、インターネットからのバケットへのs3:GetObject を設定する必要があります。

1.静的Webホスティング有効化
2.パブリックアクセスブロック無効化
3.バケットポリシー設定をs3:GetObject を設定

暗号化のタイミング
バケットポリシーが評価され適用された後、バケットの暗号化が適用されます。この設定では、バケット暗号化設定を有効にしていても、暗号化情報なしの PUT リクエストを拒否するバケットポリシーがある場合、該当PUT リクエストは拒否されてしまうため、そういったデータリクエストが発生した場合にはS3への暗号化したデータ登録に失敗してしまいます。
PUTリクエストヘッダーに暗号化情報が含まれている場合、Amazon S3 はPUTリクエストの暗号化情報を使用してオブジェクトを Amazon S3 に保存する前に暗号化することが必要となります。

別のAWSアカウントに所有するS3バケットの利用を許可したい場合は、そのアカウントとユーザーに対してIAMポリシーとバケットポリシー両方の許可設定が必要となります。まずはIAMポリシーによってS3自体の捜査権限を付与します。次にバケットポリシーにおいて、そのIAMユーザーやAWSアカウント指定を利用可能なように設定することが可能です。どちらかを許可設定しても、どちらかのポリシーを許可していないと、アクセスは拒否されます。